import{isString as t,isFunction as r,isObject as e,remove as n}from"bittydash";function o(t){return function(t){if(Array.isArray(t))return u(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,r){if(!t)return;if("string"==typeof t)return u(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return u(t,r)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function i(t){switch(t){case"ctrl":return"Control";case"space":return" ";case"left":return"ArrowLeft";case"right":return"ArrowRight";case"up":return"ArrowUp";case"bottom":return"ArrowBottom";default:return t}}function a(t){return t.replace(/\s+/g,"")}function c(t){return t.toLowerCase()}var f="default",s=!0,l=[],p=new Map;function y(t){return Array.isArray(t)?c(t.map((function(t){return i(t)})).sort().join(""))===c(l.join("")):1===l.length&&c(l[0])===c(i(t))}function d(){l.length=0}function w(t){!function(t){var r=t.type,e=t.key,o=t.repeat;"keydown"!==r||o||l.push(e);"keyup"===r&&queueMicrotask((function(){n(l,e)}))}(t);var r=p.get("*")||[],e=p.get(f)||[];[].concat(o(r),o(e)).forEach((function(r){var e=r.handler,n=r.keydown,o=r.keyup,u=r.key,i=r.splitValue;a(u).split(",").forEach((function(r){if(function(t,r){return t.split(r).length>1}(r,i)){var u=function(t,r){return a(t).split(r)}(r,i);y(u)&&h(e,n,o,t)}else y(r)&&h(e,n,o,t)}))}))}function h(t,r,e,n){var o=n.type;("keydown"===o&&r||"keyup"===o&&e)&&t.call(this,n)}function m(o,u,i){if(!t(o))throw new Error("key must be string");if(!r(u))throw new Error("handler must be function");var a=o,c="default",f="+",l=!1,y=!1;t(i)?c=i:e(i)&&Object.keys(i).forEach((function(t){"scope"===t&&(c=i[t]),"splitValue"===t&&(f=i[t]),"keydown"===t&&(l=!0),"keyup"===t&&(y=!0)})),l||y||(l=!0),s&&(s=!1,document.addEventListener("keydown",w),document.addEventListener("keyup",w),window.addEventListener("focus",d),window.addEventListener("blur",d)),p.has(c)||p.set(c,[]);var h=p.get(c),m={handler:u,key:a,splitValue:f,keydown:l,keyup:y};return h.push(m),function(){var t=p.get(c);t&&n(t,m)}}function k(){return f}function g(r){if(!t(r))throw new Error("scope must be string");f=r}function v(t){"*"!==t&&(p.delete(t),f="default")}function b(){p.clear(),p.set("*",[]),f="default",d()}p.set("*",[]);export{b as clearAll,v as deleteScope,k as getScope,g as setScope,m as subscribe};
